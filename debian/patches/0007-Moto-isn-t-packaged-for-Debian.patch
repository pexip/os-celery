From: Stefano Rivera <stefanor@debian.org>
Date: Sat, 1 Feb 2020 20:28:27 +0100
Subject: Moto isn't packaged for Debian

---
 requirements/test.txt      |  1 -
 t/unit/backends/test_s3.py | 15 +++++++++------
 2 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/requirements/test.txt b/requirements/test.txt
index c2c47f3..3be9078 100644
--- a/requirements/test.txt
+++ b/requirements/test.txt
@@ -3,6 +3,5 @@ pytest-celery
 pytest-subtests
 pytest-timeout~=1.4.2
 boto3>=1.9.178
-moto>=2.2.6
 -r extras/yaml.txt
 -r extras/msgpack.txt
diff --git a/t/unit/backends/test_s3.py b/t/unit/backends/test_s3.py
index fdea04b..e2442fa 100644
--- a/t/unit/backends/test_s3.py
+++ b/t/unit/backends/test_s3.py
@@ -2,13 +2,16 @@ from unittest.mock import patch
 
 import boto3
 import pytest
+
 from botocore.exceptions import ClientError
-from moto import mock_s3
+from case import patch
 
 from celery import states
 from celery.backends.s3 import S3Backend
 from celery.exceptions import ImproperlyConfigured
 
+moto = pytest.importorskip("moto")
+
 
 class test_S3Backend:
 
@@ -84,7 +87,7 @@ class test_S3Backend:
             's3', endpoint_url=endpoint_url)
 
     @pytest.mark.parametrize("key", ['uuid', b'uuid'])
-    @mock_s3
+    @moto.mock_s3
     def test_set_and_get_a_key(self, key):
         self._mock_s3_resource()
 
@@ -97,7 +100,7 @@ class test_S3Backend:
 
         assert s3_backend.get(key) == 'another_status'
 
-    @mock_s3
+    @moto.mock_s3
     def test_set_and_get_a_result(self):
         self._mock_s3_resource()
 
@@ -111,7 +114,7 @@ class test_S3Backend:
         value = s3_backend.get_result('foo')
         assert value == 'baar'
 
-    @mock_s3
+    @moto.mock_s3
     def test_get_a_missing_key(self):
         self._mock_s3_resource()
 
@@ -141,7 +144,7 @@ class test_S3Backend:
             s3_backend.get('uuidddd')
 
     @pytest.mark.parametrize("key", ['uuid', b'uuid'])
-    @mock_s3
+    @moto.mock_s3
     def test_delete_a_key(self, key):
         self._mock_s3_resource()
 
@@ -157,7 +160,7 @@ class test_S3Backend:
 
         assert s3_backend.get(key) is None
 
-    @mock_s3
+    @moto.mock_s3
     def test_with_a_non_existing_bucket(self):
         self._mock_s3_resource()
 
