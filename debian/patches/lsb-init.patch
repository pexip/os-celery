Description: LSB compliant headers, status actions and ENABLED variable
 Upstream ships it's own init scripts but they lack some LSB header and
 the (optional) "status" action. This patch fixes this and also adds a
 variable called ENABLED in /etc/default/celeryd.
Author: Michael Fladischer <FladischerMichael@fladi.at>
Last-Update: 2013-09-03
Forwarded: no

--- a/extra/generic-init.d/celerybeat
+++ b/extra/generic-init.d/celerybeat
@@ -15,11 +15,15 @@
 # Default-Start:     2 3 4 5
 # Default-Stop:      0 1 6
 # Short-Description: celery periodic task scheduler
+# Description:       Controls the Celery periodic task scheduler.
 ### END INIT INFO
 
 # Cannot use set -e/bash -e since the kill -0 command will abort
 # abnormally in the absence of a valid process ID.
 #set -e
+
+. /lib/lsb/init-functions
+
 VERSION=10.0
 echo "celery init v${VERSION}."
 
@@ -85,6 +89,7 @@
 
 scripts=""
 
+
 if test -f /etc/default/celeryd; then
     scripts="/etc/default/celeryd"
     _config_sanity /etc/default/celeryd
@@ -106,6 +111,13 @@
 DEFAULT_LOG_FILE="/var/log/celery/beat.log"
 DEFAULT_LOG_LEVEL="INFO"
 DEFAULT_CELERYBEAT="$CELERY_BIN beat"
+DEFAULT_ENABLED="false"
+
+ENABLED=${ENABLED:-$DEFAULT_ENABLED}
+if [ "$ENABLED" != "true" ]; then
+    echo "celerybeat daemon disabled - see $scripts."
+    exit 0
+fi
 
 CELERYBEAT=${CELERYBEAT:-$DEFAULT_CELERYBEAT}
 CELERYBEAT_LOG_LEVEL=${CELERYBEAT_LOG_LEVEL:-${CELERYBEAT_LOGLEVEL:-$DEFAULT_LOG_LEVEL}}
@@ -246,7 +258,16 @@
                 --pidfile="$CELERYBEAT_PID_FILE"
 }
 
-
+status () {
+    pid=$(cat "$CELERYBEAT_PID_FILE")
+    kill -0 $pid 1>/dev/null 2>&1
+    if [ $? -eq 0 ]; then
+        echo "celerybeat running"
+    else
+        echo "celerybeat not running"
+        exit 1
+    fi
+}
 
 case "$1" in
     start)
@@ -276,8 +297,11 @@
         check_dev_null
         check_paths
     ;;
+    status)
+        status
+        ;;
     *)
-        echo "Usage: /etc/init.d/${SCRIPT_NAME} {start|stop|restart|create-paths}"
+        echo "Usage: /etc/init.d/${SCRIPT_NAME} {start|stop|restart|create-paths|status}"
         exit 64  # EX_USAGE
     ;;
 esac
--- a/extra/generic-init.d/celeryd
+++ b/extra/generic-init.d/celeryd
@@ -16,6 +16,7 @@
 # Default-Start:     2 3 4 5
 # Default-Stop:      0 1 6
 # Short-Description: celery task worker daemon
+# Description:       Controls a celery task worker daemon instance
 ### END INIT INFO
 #
 #
@@ -28,6 +29,9 @@
 #
 # You can then configure this by manipulating /etc/default/little-worker.
 #
+
+. /lib/lsb/init-functions
+
 VERSION=10.0
 echo "celery init v${VERSION}."
 if [ $(id -u) -ne 0 ]; then
@@ -52,6 +56,7 @@
 DEFAULT_LOG_LEVEL="INFO"
 DEFAULT_NODES="celery"
 DEFAULT_CELERYD="-m celery worker --detach"
+DEFAULT_ENABLED="false"
 
 CELERY_DEFAULTS=${CELERY_DEFAULTS:-"/etc/default/${SCRIPT_NAME}"}
 
@@ -104,6 +109,12 @@
     . "$CELERY_DEFAULTS"
 fi
 
+ENABLED=${ENABLED:-$DEFAULT_ENABLED}
+if [ "$ENABLED" != "true" ]; then
+    echo "celery daemon disabled - see $CELERY_DEFAULTS"
+    exit 0
+fi
+
 # Sets --app argument for CELERY_BIN
 CELERY_APP_ARG=""
 if [ ! -z "$CELERY_APP" ]; then
